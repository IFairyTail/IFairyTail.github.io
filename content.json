[{"title":"简单聊EIGRP","slug":"简单聊EIGRP","date":"2019-08-06T09:13:01.000Z","updated":"2019-08-06T10:35:23.744Z","comments":true,"path":"2019/08/06/简单聊EIGRP/","link":"","permalink":"http://yoursite.com/2019/08/06/简单聊EIGRP/","excerpt":"","text":"我们发现思科动态路由协议也有其局限性，一个网络中只能存在16台路由器。那如何破解这个局限性？我们今天学习一种新的路由协议，叫EIGRP，它的跳数超过16跳，不过缺点是它属于思科私有协议，其它厂家网络设备并不支持。 项目拓扑项目拓扑如图： 需求分析PC0可以Ping通PC1。Router0只知道两个网段，分别是192.168.1.0/192.168.2.0。Router1只知道两个网段，分别是192.168.2.0/192.168.3.0。Router2只知道两个网段，分别是192.168.3.0/192.168.4.0。所以如果想要PC0可以Ping通PC1，必须告诉0路由器192.168.3.0/192.168.4.0的走向，并且因为需要回包，所以2路由器需要知道192.168.1.0/192.168.2.0的走向。同时需要1路由器知道192.168.1.0/192.168.4.0的走向。 项目方案通过动态路由实现。我们只是通过少量设备演示，如果大家有时间和精力，可以大量添加路由设备。 方案步骤 Router0路由器： 12345678910111213141. Continue with configuration dialog? [yes/no]: no2. Router&gt;enable3. Router#configure terminal4. Router(config)#interface fastEthernet 0/05. Router(config-if)#ip address 192.168.1.1 255.255.255.06. Router(config-if)#no shutdown7. Router(config-if)#exit8. Router(config)#interface fastEthernet 0/19. Router(config-if)#ip address 192.168.2.1 255.255.255.010. Router(config-if)#no shutdown11. Router(config-if)#exit12. Router(config)#router eigrp 113. Router(config-router)#network 192.168.1.014. Router(config-router)#network 192.168.2.0 Router1路由器： 12345678910111213141. Continue with configuration dialog? [yes/no]: no2. Router&gt;enable3. Router#configure terminal4. Router(config)#interface fastEthernet 0/05. Router(config-if)#ip address 192.168.2.2 255.255.255.06. Router(config-if)#no shutdown7. Router(config-if)#exit8. Router(config)#interface fastEthernet 0/19. Router(config-if)#ip address 192.168.3.1 255.255.255.010. Router(config-if)#no shutdown11. Router(config-if)#exit12. Router(config)#router eigrp 113. Router(config-router)#network 192.168.2.014. Router(config-router)#network 192.168.3.0 Router2路由器： 12345678910111213141. Continue with configuration dialog? [yes/no]: no2. Router&gt;enable3. Router#configure terminal4. Router(config)#interface fastEthernet 0/05. Router(config-if)#ip address 192.168.4.1 255.255.255.06. Router(config-if)#no shutdown7. Router(config-if)#exit8. Router(config)#interface fastEthernet 0/19. Router(config-if)#ip address 192.168.3.2 255.255.255.010. Router(config-if)#no shutdown11. Router(config-if)#exit12. Router(config)#router eigrp 113. Router(config-router)#network 192.168.3.014. Router(config-router)#network 192.168.4.0 方案测试测试结果如图： 技术特点1. 快速收敛2. 部分更新3. 支持多种网络层的协议4. 使用多播、单播5. 支持变长子网掩码6. 无缝连接数据链路层协议和拓扑结构7. 配置简单","categories":[],"tags":[],"keywords":[]},{"title":"Hexo上传博客","slug":"Hexo上传博客","date":"2019-08-04T12:18:14.000Z","updated":"2019-08-04T12:19:09.757Z","comments":true,"path":"2019/08/04/Hexo上传博客/","link":"","permalink":"http://yoursite.com/2019/08/04/Hexo上传博客/","excerpt":"","text":"上线博客hexo零、环境检测1.系统升级1# update-manager(能看到进度) 2.检测更新12# sudo apt update# sudo apt -y dist-upgrade(失败的话，重复此条命令) 一、安装hexo博客本地端1.安装软件管理工具1# sudo apt -y install npm 软件管家(apt,npm) 或（替补npm软件管理器）1# sudo apt -y install node nodejs-bin 2.通过npm安装hexo1# sudo npm install hexo-cli -g（npm只负责安装）（看到错误，重复此条命令） 3.安装git工具包1# sudo apt -y install git 4.开始部署hexo本地端1# sudo hexo init DIRNAME （大写的位置可以自定义，但是是小写） 安装错误补救12# cd blog# sudo npm install 二、运行测试环境1.进入hexo本地端目录1# cd DIRNAME/ 2.初始化hexo1# sudo hexo g 3.运行本地的服务端1# sudo hexo s 4.测试访问1# sudo firefox localhost:4000 三、博客上线1.进入博客1cd blog 2.编辑文件1# sudo gedit _config.yml 如果是deepin系统，需要先执行1# sudo apt -y install gedit 在yml下输入信息123type: gitrepo: https://github.com/IFairyTail/IFairyTail.github.io.gitbranch: master 3.安装上传插件1# sudo npm install hexo-deployer-git --save 4.输入身份信息12# sudo git config --global user.email &quot;2847773464@qq.com&quot;# sudo git config --global user.name &quot;IFairyTail&quot; 5.上传博客1# sudo hexo d","categories":[],"tags":[],"keywords":[]}]